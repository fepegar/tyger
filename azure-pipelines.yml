# Trigger on changes to the "main" branch
trigger:
- main

# Trigger for PRs that target the "main" branch
pr:
- main

pool:
  vmImage: ubuntu-latest

variables:
  DOCKER_BUILDKIT: 1
  isPR: $[eq(variables['Build.Reason'], 'PullRequest')]
  isCI: $[or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'BatchedCI'))]
  ${{ if eq(variables.isPR, 'true') }}:
    TYGER_ENVIRONMENT_NAME: 'tyger-pr$(System.PullRequest.PullRequestId)'
  ${{ else }}:
    TYGER_ENVIRONMENT_NAME: 'tygerwestus2'

jobs:
- job: buildAndTest
  displayName: "Build and run tests"
  variables:
    GOBIN: '$(Agent.TempDirectory)/go/bin'
  steps:

  - task: GoTool@0
    inputs:
      version: '1.17.3'

  - script: echo '##vso[task.prependpath]$(GOBIN)'
    displayName: "Add GOBIN to PATH"

  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      useGlobalJson: true
      workingDirectory: $(system.DefaultWorkingDirectory)/server

  - script: |
      set -euo pipefail
      go install cuelang.org/go/cmd/cue@v0.4.2
    displayName: Install tools

  - script: |
      set -euo pipefail
      make verify-format
    displayName: "Build and verify formatting"

  - task: AzureCLI@2
    displayName: Up
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -euo pipefail
        make ensure-environment
        make up
        make install-cli
        make download-test-client-cert
        make login-service-principal
        make test-no-up

  - script: |
      set -euo pipefail
      image=$(.devcontainer/get-devcontainer-image.sh)
      echo "##vso[task.setvariable variable=DEVCONTAINER_IMAGE]${image}"
    displayName: Read devcontainer.json

  - script: |
      set -euo pipefail
      docker pull ${DEVCONTAINER_IMAGE}
    displayName: Pull devcontainer image

  - script: |
      set -euo pipefail
      docker build -f .devcontainer/Dockerfile --target devcontainer -t devcontainer --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${DEVCONTAINER_IMAGE} .

      if ! .devcontainer/diff-container-images.sh "${DEVCONTAINER_IMAGE}" devcontainer; then
        echo 'Error: the "image" field in devcontainer.json does not reflect the current "devcontainer" target of the Dockerfile. Run .devcontainer/update-devcontainer-image.sh to correct this.'
        exit 1
      fi
    displayName: Verify devcontainer.json

  - task: AzureCLI@2
    condition: and(succeeded(), eq(variables.isPR, 'true'))
    displayName: Remove environment
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -euo pipefail
        make down
        make remove-environment

  - task: AzureCLI@2
    condition: and(succeeded(), eq(variables.isCI, 'true'))
    displayName: Push Images
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -euo pipefail
        scripts/build-images.sh --push --use-git-hash-as-tag

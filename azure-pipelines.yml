# Trigger on changes to the "main" branch
trigger:
- main

# Trigger for PRs that target the "main" branch
pr:
- main

pool: tyger

variables:
  DOCKER_BUILDKIT: 1
  IS_PR: $[ne(variables['System.PullRequest.PullRequestId'], '')]
  IS_CI: $[or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'BatchedCI'))]
  DEVCONTAINER_IMAGE: compimagdevcontainers.azurecr.io/tyger@sha256:ae09da0df42a0597fe662afb7f9d9a37900cd4169f20cb0955cd7fdb3935ee3a

jobs:
- job: buildAndTest
  displayName: "Deploy and run tests"
  container:
    image: $(DEVCONTAINER_IMAGE)
  variables:
    BASH_ENV: /opt/devcontainer/devcontainer.bashrc

  steps:

  - script: |
      set -euo pipefail

      if [[ "$(.devcontainer/get-devcontainer-image.sh)" != "${DEVCONTAINER_IMAGE}" ]]; then
        echo "The devcontainer image in azure-pipelines.yml and devcontainer.json must be the same"
      fi

      docker build -f .devcontainer/Dockerfile --target devcontainer -t devcontainer --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from ${DEVCONTAINER_IMAGE} .

      if ! .devcontainer/diff-container-images.sh "${DEVCONTAINER_IMAGE}" devcontainer; then
        echo 'Error: the "image" field in devcontainer.json does not reflect the current "devcontainer" target of the Dockerfile. Run .devcontainer/update-devcontainer-image.sh to correct this.'
        exit 1
      fi
    displayName: Verify devcontainer.json

  - script: |
      make restore
      make verify-format
    displayName: "Build and verify formatting"

  - script: |
      # The AzureCLI@2 task needs to be able to execute the az command in the container, before running
      # our script, without activating the conda environment
      echo '##vso[task.prependpath]/opt/conda/envs/tyger/bin'

      # Determine the envionment name to use
      if [[ "${IS_PR}" == "True" ]]; then
        environment_name="tyger-pr${SYSTEM_PULLREQUEST_PULLREQUESTID}"
      else
        environment_name="tygerwestus2"
      fi

      echo "##vso[task.setvariable variable=TYGER_ENVIRONMENT_NAME]${environment_name}"

      env | sort

    displayName: Set variables

  - task: AzureCLI@2
    displayName: Ensure environment
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        make ensure-environment

  - task: AzureCLI@2
    displayName: Build and install Helm chart
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        make up

  - task: AzureCLI@2
    displayName: Prepare tyger CLI
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        make install-cli
        make download-test-client-cert
        make login-service-principal

  - task: AzureCLI@2
    displayName: Run tests
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -euo pipefail

        # Allow repo to be properly bind mounted in test container
        export CONTAINER_WORKSPACE_DIR=$(pwd)
        export HOST_WORKSPACE_DIR=$(.devcontainer/get-host-workspace-directory.sh)

        make test-no-up

  - task: AzureCLI@2
    condition: and(succeeded(), eq(variables.IS_PR, 'true'))
    displayName: Remove environment
    inputs:
      azureSubscription: BiomedicalImaging-NonProd
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        set -euo pipefail
        make down
        make remove-environment
